#pragma once

#include "Util/src/util_string.h"

static str_t g_vertex_shader = str_comp(
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos;\n"
    "layout (location = 1) in vec2 a_tex_coords;\n"
    "layout (location = 2) in vec4 a_color;\n"
    "layout (location = 3) in float a_tex_index;\n"
    "layout (location = 4) in float a_use_bilinear;\n"
    ""
    "out vec2 f_tex_coords;\n"
    "out vec4 f_color;\n"
    "flat out float f_tex_index;\n"
    "flat out float f_use_bilinear;\n"
    ""
    "uniform mat4 view;\n"
    "uniform mat4 projection;\n"
    ""
    "void main()\n"
    "{\n"
    "    f_color = a_color;\n"
    "    f_tex_coords = a_tex_coords;\n"
    "    f_tex_index = a_tex_index;\n"
    "    f_use_bilinear = a_use_bilinear;\n"
    "    gl_Position = projection * view * vec4(a_pos, 0.0, 1.0);\n"
    "}\n"
);

static str_t g_fragment_shader = str_comp(
    "#version 330 core\n"
    ""
    "in vec4 f_color;\n"
    "in vec2 f_tex_coords;\n"
    "flat in float f_tex_index;\n"
    "flat in float f_use_bilinear;\n"
    "out vec4 FragColor;\n"
    ""
    "uniform sampler2DArray texture_array;\n"
    ""
    "void main()\n"
    "{\n"
    "    ivec3 texture_size = textureSize(texture_array, 0);\n"
    "    vec2 uv = f_tex_coords;\n"
    "    if (f_use_bilinear == 0) {\n"
    "        uv = (floor(f_tex_coords * (ivec2(texture_size) - 0.0001)) + 0.5) / ivec2(texture_size);\n"
    "    }\n"
    "    vec3 array_uv = vec3(uv.x, uv.y, f_tex_index);\n"
    "    FragColor = f_color * texture(texture_array, array_uv);\n"
    "}\n"
);

static str_t g_vertex_shader_line = str_comp(
    "#version 330 core\n"
    "layout (location = 0) in vec2 a_pos;\n"
    "layout (location = 2) in vec4 a_color;\n"
    ""
    "out vec4 f_color;\n"
    ""
    "uniform mat4 view;\n"
    "uniform mat4 projection;\n"
    ""
    "void main()\n"
    "{\n"
    "    f_color = a_color;\n"
    "    gl_Position = projection * view * vec4(a_pos, 0.0, 1.0);\n"
    "}\n"
);